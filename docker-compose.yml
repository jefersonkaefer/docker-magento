version: '2'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: ${PROJECT_NAME}-nginx-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx-proxy.conf:/etc/nginx/nginx.conf
    networks:
      - magento

  nginx:
    build: ./nginx
    container_name: ${PROJECT_NAME}-nginx
    volumes:
      - ./magento2:/home/magento:cached
    depends_on:
      - mysql
      - redis
      - php-fpm
      - nginx-proxy
    networks:
      - magento
    environment:
      - VIRTUAL_HOST=${PROJECT_VIRTUAL_HOST}

  php-fpm:
    build: ./php-fpm
    container_name: ${PROJECT_NAME}-php-fpm
    volumes:
      - ./magento2:/home/magento:cached
      - ./php-fpm/php.ini:/etc/php.ini
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - es
    networks:
      - magento
    env_file:
      - php.env


  redis:
    image: arm64v8/redis:7.0
    container_name: ${PROJECT_NAME}-redis
    ports:
      - "6379:6379"
    networks:
      - magento
  mysql:
    image: arm64v8/mysql:8.0.34
    container_name: ${PROJECT_NAME}-mysql
    volumes:
      - ./mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    env_file:
      - mysql.env
    ports:
      - "3308:3306"
    networks:
      - magento

  mailhog:
    platform: linux/x86_64
    image: mailhog/mailhog
    container_name: ${PROJECT_NAME}-mailhog
    environment:
      - VIRTUAL_HOST=mail.${PROJECT_VIRTUAL_HOST}
      - VIRTUAL_PORT=8025
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - magento
    expose:
      - 8025

  rabbitmq:
    image: arm64v8/rabbitmq:3.11-management
    container_name: ${PROJECT_NAME}-rabbitmq
    environment:
      - VIRTUAL_HOST=rabbit.${PROJECT_VIRTUAL_HOST}
      - VIRTUAL_PORT=15672
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    networks:
      - magento
    expose:
      - 15672
  es:
    image: elasticsearch:7.9.1
    container_name: elasticsearch
    restart: unless-stopped
    environment:
    - node.name=elasticsearch
    - discovery.seed_hosts=elasticsearch
    - cluster.initial_master_nodes=elasticsearch
    - cluster.name=docker-cluster
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    networks:
      - magento
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  
  varnish:
    image: arm64v8/varnish:7.3
    container_name: ${PROJECT_NAME}-varnish
    restart: always
    networks:
      - magento
    ports:
      - "6082:6082"
    depends_on:
      - nginx
    links:
      - nginx
    volumes:
      - ./varnish/varnish.vcl:/etc/varnish/default.vcl
    environment:
      - CACHE_SIZE=1G

networks:
  magento:
    driver: bridge